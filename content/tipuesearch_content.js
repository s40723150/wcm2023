var tipuesearch = {"pages": [{'title': 'About', 'text': '本課程為網際內容管理, 每週上課三小時, 其中兩小時為教學時段, 另外一小時為學員實際操作與練習時段. 課程內容主要承接計算機程式課程中的 Brython 與 Python 初階 Programming 技術. 教導學員如何在 Windows 與 Linux 操作系統環境中搭建全球資訊網伺服器 (WWW Server), 如何建立個人與團隊網站, 以及如何利用 Replit 與自行安裝的 Windows 與 Linux 操作系統建立網際內容管理程式套件. \n 課程內容分為三部分: \n \n Brython 與 Python 程式 (建立個人 Github Pages 靜態網站與 Replit 上的動態網站) \n Windows 與 Linux 上的網站\xa0 (Nginx + Stunnel 網站安裝與設定, 與個人動態與靜態網站結合) \n cmsimde 程式開發 (如何利用手機維護個人動態與靜態網站) \n \n 課程評量: 出席, 線上測驗, 協同專案與自我評量. \n 課程必備: USB 3.0 以上規格之隨身碟, 適用於電腦或手機之耳機. \n 課程選項配備: 電腦用麥克風與 Webcam. \n 本倉儲以  https://github.com/mdecycu/cmsite  作為 Template 複製, 倉儲位於  https://github.com/mdecycu/wcm2023 \n 課程靜態網頁:  https://mde.tw/wcm2023 \n 網際內容管理在研究  https://github.com/mdecycu/cmsimde  網際內容管理系統. \n 本課程要求學員下載下載  portable_python_w10_nx_robodk.7z  (1.03 GB) 可攜 Python 程式系統, 解開壓縮後放入 USB 隨身碟.', 'tags': '', 'url': 'About.html'}, {'title': 'Stud', 'text': 'stud 是一台 Ubuntu server, 讓每一個用戶透過兩個 ports 共享 server\xa0 中所設置的外部與內部 ports. \n 其中以 9 開頭的 port 設定為內部 port,\xa0 而 8 開頭的 port 則用於外部連線. \n 當某一用戶誤用所分配的內部 port 時, 管理者就可以透過 lsof 指令找出該用戶, 並即時加以糾正. \n 又由於 8 開頭的外部 port 統一由管理者以 Stunnel 啟動並加以管控, 因此一般用戶產生誤用的情況只會發生在內部以 9 開頭的 port. \n 列出 Ubuntu 中 port 使用相關資訊: lsof -i :9123 \n lsof: list open files \n -i: selects the listing of files any of whose Internet address matches the address specified in i.\xa0 If no address is specified, this option selects the listing of all Internet and x.25 (HP-UX) network files.', 'tags': '', 'url': 'Stud.html'}, {'title': 'Ref', 'text': '2015 \n https://github.com/coursemdetw/2015wcm \n 2016 \n https://github.com/2015fallhw/wcmw13 \n https://github.com/2015fallhw/2016springwcm_final \n https://cadlab.mde.tw/post/ \n 2017 \n https://s40523144.github.io/2017springwcm_hw/blog/2017spring-mde-wcm.html \n 2018 \n https://github.com/scrum-3/wcms-scrum3 \n 2019 \n https://github.com/50733143/50733143.github.io \n https://www.youtube.com/watch?v=lPJGzHdpIOw \n https://github.com/scrum-1/wcm2019 \n https://scrum-1.github.io/wcm2019 \n 2020 \n https://gitter.im/mdecourse/wcm2020 \n https://50833106.github.io/wcmj2020 \n 2021 \n https://gitter.im/mdecourse/wcm2021 \n 2022 \n https://gitter.im/mdecourse/wcm2022', 'tags': '', 'url': 'Ref.html'}, {'title': 'WCM', 'text': "Web-based Content Management (網際內容管理) - 利用瀏覽器管理個人網站中的前端與後端內容稱為網際內容管理, 此網際指的是全球資訊網 (World Wide Web, WWW), 其中牽涉全球資訊網前端的程式與內容, 以及全球資訊網後端的程式與內容. \n 全球資訊網前端指的就是瀏覽器 (Web Browser), 其中首選為 Firefox 與 Waterfox, 其次為 Windows 環境中的 Edge, 最後若需要第四套瀏覽器, 才使用 Google Chrome. \n 全球資訊網後端址的就是 WWW Server, 本課程所使用的全球資訊網伺服器包括 serve Github Pages 的 Github 全球資訊網伺服器 (個人帳號 加上 github.io), 以及可自行配置安裝的 Nginx, 其次為了配合 Nginx 在 https 協定上的應用, 另外結合 Stunnel 與 Let's Encrypt 服務. \n", 'tags': '', 'url': 'WCM.html'}, {'title': '五專', 'text': '請問: \n 您對系上的網路系統架構了解多少? \n 電腦輔助設計室是如何上網的？ \n 您的手機使用門號上網與透過電腦輔助設計室 Wifi 上網, 會有哪些差別？ \n 電腦上的 Edge, Chrome 與 Firefox 瀏覽器在使用上有哪些差別? \n 網際內容管理中的 Web-based 代表什麼？ \n 請以自己的學號登入  https://mail.nfu.edu.tw \n 請以自己的英文姓名至  https://github.com  申請帳號 \n 假如要選擇一項主題作為內容進行管理, 您會選擇什麼主題？ \n', 'tags': '', 'url': '五專.html'}, {'title': '四技', 'text': '請問一下, 您希望這們網際內容管理課程該如何上？', 'tags': '', 'url': '四技.html'}, {'title': 'Website', 'text': 'Website 指的是全球資訊網協定下的網站, 而全球資訊網協定是依附在 TCP/IP 與 HTTP 網路協定下的客戶端 (瀏覽器) 與伺服器端. \n 若利用 Github Pages 建立個人網站, 則伺服器端就是 github.io 網址中的伺服器, \n Github Pages Docs:\xa0 https://docs.github.com/en/enterprise-server@3.5/admin/overview/about-github-enterprise-server \xa0 \n Github 帳號功能比較:  https://github.com/pricing#feature-comparison', 'tags': '', 'url': 'Website.html'}, {'title': 'Reeborg', 'text': 'https://github.com/aroberge/reeborg \n https://mde.tw/wcm2023/reeborg2016/ \n \n Reeborg 是如何建立的? \n 初學程式者如何透過 Reeborg 學習 Python (Brython and CPython) 與 Javascript \n', 'tags': '', 'url': 'Reeborg.html'}, {'title': 'cmsimde', 'text': 'https://github.com/mdecycu/cmsimde \n 本課程第三部分在說明  https://github.com/mdecycu/cmsite  與  https://github.com/mdecycu/cmsimde_site  如何搭建, 程式架構與應用的發展如何從個人電腦導向手機.', 'tags': '', 'url': 'cmsimde.html'}, {'title': 'Brython', 'text': 'cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule \n https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束 ', 'tags': '', 'url': 'Brython.html'}]};