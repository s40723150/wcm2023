<h1>About</h1>
<p>本課程為網際內容管理, 每週上課三小時, 其中兩小時為教學時段, 另外一小時為學員實際操作與練習時段. 課程內容主要承接計算機程式課程中的 Brython 與 Python 初階 Programming 技術. 教導學員如何在 Windows 與 Linux 操作系統環境中搭建全球資訊網伺服器 (WWW Server), 如何建立個人與團隊網站, 以及如何利用 Replit 與自行安裝的 Windows 與 Linux 操作系統建立網際內容管理程式套件.</p>
<p>課程內容分為三部分:</p>
<ol>
<li><a href="https://brython.info/">Brython</a> 與 Python 程式 (建立個人 <a href="https://pages.github.com/">Github Pages</a> 靜態網站與 <a href="https://replit.com/">Replit</a> 上的動態網站)</li>
<li>Windows 與 Linux 上的網站  (<a href="https://nginx.org/">Nginx</a> + <a href="https://www.stunnel.org/">Stunnel</a> 網站安裝與設定, 與個人動態與靜態網站結合)</li>
<li><a href="https://github.com/mdecycu/cmsimde">cmsimde</a> 程式開發 (如何利用手機維護個人動態與靜態網站)</li>
</ol>
<p>課程評量: 出席, 線上測驗, 協同專案與自我評量.</p>
<p>課程必備: USB 3.0 以上規格之隨身碟, 適用於電腦或手機之耳機.</p>
<p>課程選項配備: 電腦用麥克風與 Webcam.</p>
<p>本倉儲以 <a href="https://github.com/mdecycu/cmsite">https://github.com/mdecycu/cmsite</a> 作為 Template 複製, 倉儲位於 <a href="https://github.com/mdecycu/wcm2023">https://github.com/mdecycu/wcm2023</a></p>
<p>課程靜態網頁: <a href="https://mde.tw/wcm2023">https://mde.tw/wcm2023</a></p>
<p><a href="https://teams.microsoft.com/l/team/19%3aq-Edh3FuKnQEWgqKCLq7-6Q6Xwtd4EgJG1Z4mucnJAA1%40thread.tacv2/conversations?groupId=778c55f7-a09e-4840-87e4-63a987525735&amp;tenantId=e650a2d7-e923-45bb-8fa6-1af5b0f72f09">MS Teams</a> (for @nfu users only)</p>
<p>網際內容管理在研究 <a href="https://github.com/mdecycu/cmsimde">https://github.com/mdecycu/cmsimde</a> 網際內容管理系統.</p>
<p>本課程要求學員下載下載 <a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EXABheFswCtEtT5p-9uDN4ABuK3DASC8mKkFzpLA3q7f6g?e=AqXydW" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://nfuedu.sharepoint.com/:u:/s/cad2022/exabhefswctett5p-9udn4abuk3dasc8mkkfzpla3q7f6g?e=aqxydw">portable_python_w10_nx_robodk.7z</a> (1.03 GB) 可攜 Python 程式系統, 解開壓縮後放入 USB 隨身碟.</p>
<p>行事曆</p>
<p><a href="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei">全頁檢視</a></p>
<p><iframe height="600" src="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei" width="800"></iframe></p><h2>Motivation</h2>
<p>學習網際內容管理的動機:</p>
<p style="padding-left: 30px;">將數位內容放入 www 伺服器, 以方便維護管理及展示</p>
<p>網際內容管理牽涉:</p>
<ol>
<li>數位內容 - 以數位流程處理事務並建立對應內容</li>
<li>www 伺服器 - 以全球資訊網架構管理內容 - html, css, Javascript</li>
<li>維護管理 - Git, Repository, Web pages</li>
<li>展示 - Web browser oriented</li>
</ol>
<p>教導或學習網際內容管理的過程, 必須自問學這東西有用嗎? 您自己(平時, 一直)使用嗎?</p>
<p>數位教材:</p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ET59eCPLupBGgIUmBog-yE0BMkL4RdYWNzpBxW-PzvnX1A?e=RKYWbq">1999 How to be a star engineer</a>, <a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EQtBbwaFSKdCrnxljlGU9NMBcl70NO4OghYo5caSpLcvcw?e=E9iyjL">如何成為一位傑出的工程師</a> (for @nfu users only)</p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EZzE7rKRQ3ZIvSoavwvZB6gBmupyVpzqRuvH7yO1i0Yj1w?e=h5SBg0">2023 Cloud Computing Technology</a> (for @nfu users only)</p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EZpULDm6GfNCsuTiqfloxnYBV1GzC1lG39SjU6ooqLWbyA?e=vuIlOV">2021 Cloud Computing Basics</a> (for @nfu users only)</p>
<p></p><h2>Stud</h2>
<p>stud 是一台 Ubuntu server, 讓每一個用戶透過兩個 ports 共享 server  中所設置的外部與內部 ports.</p>
<p>其中以 9 開頭的 port 設定為內部 port,  而 8 開頭的 port 則用於外部連線.</p>
<p>當某一用戶誤用所分配的內部 port 時, 管理者就可以透過 lsof 指令找出該用戶, 並即時加以糾正.</p>
<p>又由於 8 開頭的外部 port 統一由管理者以 Stunnel 啟動並加以管控, 因此一般用戶產生誤用的情況只會發生在內部以 9 開頭的 port.</p>
<p>列出 Ubuntu 中 port 使用相關資訊: lsof -i :9123</p>
<p>lsof: list open files</p>
<p>-i: selects the listing of files any of whose Internet address matches the address specified in i.  If no address is specified, this option selects the listing of all Internet and x.25 (HP-UX) network files.</p><h2>Ref</h2>
<p>2015</p>
<p style="padding-left: 30px;"><a href="https://github.com/coursemdetw/2015wcm">https://github.com/coursemdetw/2015wcm</a></p>
<p>2016</p>
<p style="padding-left: 30px;"><a href="https://github.com/2015fallhw/wcmw13">https://github.com/2015fallhw/wcmw13</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/2015fallhw/2016springwcm_final">https://github.com/2015fallhw/2016springwcm_final</a></p>
<p style="padding-left: 30px;"><a href="https://cadlab.mde.tw/post/">https://cadlab.mde.tw/post/</a></p>
<p>2017</p>
<p style="padding-left: 30px;"><a href="https://s40523144.github.io/2017springwcm_hw/blog/2017spring-mde-wcm.html">https://s40523144.github.io/2017springwcm_hw/blog/2017spring-mde-wcm.html</a></p>
<p>2018</p>
<p style="padding-left: 30px;"><a href="https://github.com/scrum-3/wcms-scrum3">https://github.com/scrum-3/wcms-scrum3</a></p>
<p>2019</p>
<p style="padding-left: 30px;"><a href="https://github.com/50733143/50733143.github.io">https://github.com/50733143/50733143.github.io</a></p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/watch?v=lPJGzHdpIOw">https://www.youtube.com/watch?v=lPJGzHdpIOw</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/scrum-1/wcm2019">https://github.com/scrum-1/wcm2019</a></p>
<p style="padding-left: 30px;"><a href="https://scrum-1.github.io/wcm2019">https://scrum-1.github.io/wcm2019</a></p>
<p>2020</p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/wcm2020">https://gitter.im/mdecourse/wcm2020</a></p>
<p style="padding-left: 30px;"><a href="https://50833106.github.io/wcmj2020">https://50833106.github.io/wcmj2020</a></p>
<p>2021</p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/wcm2021">https://gitter.im/mdecourse/wcm2021</a></p>
<p>2022</p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/wcm2022">https://gitter.im/mdecourse/wcm2022</a></p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/wcm2022_guide">http://wcm.cycu.org:88/github/wcm2022_guide</a> (for @nfu users only)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/Ed28wq2Xd0VLrm1SKZy78LkB_rk0rF2lqCxTJDWsQ6qqUQ?e=bY4ODu">wcm2022_1a_w13_part1.mp4</a> (29:06 Brython 環境, 在 Tetris 遊戲加入計分系統)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EaLwVno77RVAgiw8yRIDVLwBjIE4bzMhKPtLAKB5wgStVA?e=GpgcBf">wcm2022_1a_w13_part2.mp4</a> (18:26 Brython 基本程式與 Canvas 2D 動態繪圖程式編寫)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/ESyTyRWxM7pOqzcJzTpxVywB2bfdpWGmVA9MI9BHSPLlVg?e=5fHAUK">wcm2022_5j_w13_part1.mp4</a> (29:25 cmsimde 維護與 Brython 靜態繪圖 (國旗) 介紹)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EQDCJ3GeZIZDhO2XaZ9PfUUBxyiWsUwU3ODUQEUdSdCY4Q?e=U0h858">wcm2022_5j_w13_part2.mp4</a> (44:17 Brython 環境設置與 html5 Canvas 介紹)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/Ef7p826Hjj9JtZLFLq8nKKAB37rtXpYXHtLxRKO4nAefCw?e=2vJMeN">wcm2022_1a_w14.mp4</a> (15:10 Brython 程式編寫)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EXzZbfWiBwxItzGllhkndbkBJq6naTQZHhJW68P9FLraWw?e=BGhAqW">wcm2022_5j_w14.mp4</a> (25:45 Leo Editor 與線上 2D 繪圖編寫)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EVtsGFmKL55DqA98ZPAd2x4BuqjIMKckTgPA5U-hUwqUSg?e=ERGpOb">wcm2022_5j_w16.mp4</a> (37:21 Tetris Brython 程式介紹)</p>
<p style="padding-left: 30px;"><a href="https://classroom.github.com/classrooms/112770776-2022-fall-classroom/assignments/site">cp2022 計算機程式 site</a></p>
<p style="padding-left: 30px;"><a href="https://classroom.github.com/classrooms/112770799-2022-fall-classroom/assignments/site">cad2022 電腦輔助設計與實習 site</a></p>
<p style="padding-left: 30px;">下載 <a href="https://software.nfu.edu.tw/Windows/tw/Win10_21H2.9_64BIT_CH.ISO">Win10_21H2.9_64BIT_CH.ISO</a> (5.5GB for @nfu users only) (<a href="https://software.nfu.edu.tw/KMS/windows_kms.bat">KMS</a>)</p>
<p style="padding-left: 30px;">下載 <a href="https://software.nfu.edu.tw/Office/tw/Office_Pro_Plus_2016_64Ch.iso">Office_Pro_Plus_2016_64Ch.iso</a> (964MB for @nfu users only) (<a href="https://software.nfu.edu.tw/KMS/Office_2016_KMS.bat">KMS</a>)</p>
<p style="padding-left: 30px;">行列輸入法:</p>
<p style="padding-left: 60px;"><a href="https://array30.misterfishup.com/tutorial-complete.html">https://array30.misterfishup.com/tutorial-complete.html</a></p>
<p style="padding-left: 90px;"><a href="https://github.com/MisterFISHUP/fish-up-dictionary-of-array">https://github.com/MisterFISHUP/fish-up-dictionary-of-array</a> </p>
<p style="padding-left: 60px;"><a href="https://archer1609wp.wordpress.com/2015/02/22/%E5%86%B7%E9%96%80%E4%BD%86%E5%A5%BD%E5%AD%B8%E5%A5%BD%E7%94%A8-%E8%A1%8C%E5%88%97%E8%BC%B8%E5%85%A5%E6%B3%95%E9%80%9F%E6%8E%A2/">行列輸入法速探</a></p>
<p style="padding-left: 60px;"><a href="https://youtu.be/xNZkMPNi_Qk">https://youtu.be/xNZkMPNi_Qk</a> </p>
<h2>Trends</h2>
<p>Remote work:</p>
<p><a href="https://hrmasia.com/github-tells-employees-to-prepare-to-work-from-home-permanently/">https://hrmasia.com/github-tells-employees-to-prepare-to-work-from-home-permanently/</a></p>
<p><a href="https://hrmasia.com/remote-work-leads-to-increased-productivity/">https://hrmasia.com/remote-work-leads-to-increased-productivity/</a></p>
<p>Or not:</p>
<p><a href="https://hrmasia.com/is-remote-work-stymieing-business-innovation/">https://hrmasia.com/is-remote-work-stymieing-business-innovation/</a></p>
<p><a href="https://www.dqindia.com/it-companies-moving-to-work-from-home-permanently-was-a-mistake-says-chatgpt-founder/">https://www.dqindia.com/it-companies-moving-to-work-from-home-permanently-was-a-mistake-says-chatgpt-founder/</a> </p>
<p>Flexible work:</p>
<p><a href="https://hrmasia.com/uk-rolls-out-new-initiative-for-flexible-work/">https://hrmasia.com/uk-rolls-out-new-initiative-for-flexible-work/</a></p>
<p>Four-day workweek:</p>
<p><a href="https://hrmasia.com/is-the-uk-ready-to-embrace-the-four-day-workweek/">https://hrmasia.com/is-the-uk-ready-to-embrace-the-four-day-workweek/</a></p>
<p><a href="https://hrmasia.com/most-australians-want-a-four-day-workweek/">https://hrmasia.com/most-australians-want-a-four-day-workweek/</a> </p>
<p>To download or to link?</p>
<p><a href="/downloads/111-2網路選課加退選重要事項1111228.pdf">111-2網路選課加退選重要事項1111228.pdf</a> (<a href="https://www.google.com/search?client=firefox-b-d&amp;q=nfu+111%E5%AD%B8%E5%B9%B4%E5%BA%A6%E7%AC%AC2%E5%AD%B8%E6%9C%9F%E7%B6%B2%E8%B7%AF%E5%8A%A0%E9%80%80%E9%81%B8%E9%87%8D%E8%A6%81%E4%BA%8B%E9%A0%85">Google search</a>)</p>
<p>AI:</p>
<p><a href="https://www.dqindia.com/future-of-enterprise-ai-becoming-essential-for-ease-of-living/">https://www.dqindia.com/future-of-enterprise-ai-becoming-essential-for-ease-of-living/</a> </p>
<p><a href="https://www.dqindia.com/how-to-unlock-the-power-of-chatgpt/">https://www.dqindia.com/how-to-unlock-the-power-of-chatgpt/</a> </p>
<p></p><h1>WCM</h1>
<p>Web-based Content Management (網際內容管理) - 利用瀏覽器管理個人網站中的前端與後端內容稱為網際內容管理, 此網際指的是全球資訊網 (World Wide Web, WWW), 其中牽涉全球資訊網前端的程式與內容, 以及全球資訊網後端的程式與內容.</p>
<p>全球資訊網前端指的就是瀏覽器 (Web Browser), 其中首選為 Firefox 與 Waterfox, 其次為 Windows 環境中的 Edge, 最後若需要第四套瀏覽器, 才使用 Google Chrome.</p>
<p>全球資訊網後端址的就是 WWW Server, 本課程所使用的全球資訊網伺服器包括 serve Github Pages 的 Github 全球資訊網伺服器 (個人帳號 加上 github.io), 以及可自行配置安裝的 Nginx, 其次為了配合 Nginx 在 https 協定上的應用, 另外結合 Stunnel 與 Let's Encrypt 服務.</p>
<h2>五專</h2>
<p>w18 放假.</p>
<p>網際內容管理 - Web-based Content Management</p>
<p>課程目標:</p>
<p style="padding-left: 60px;">看! 我把資料都存上雲端了.</p>
<p style="padding-left: 60px;">就說根本不需要浪費紙, 可以全部在線上課!</p>
<p style="padding-left: 60px;">電腦搬過來, 把它拆了!</p>
<p>請問:</p>
<p style="padding-left: 30px;">您對電腦的了解有多少? 請整理與下列議題相關的內容, 並將資料放入個人的倉儲與網頁中.</p>
<p style="padding-left: 60px;">請檢查一下與你現在用的這一台電腦有關的硬體與軟體資訊, 能把它拆開來看個仔細嗎?</p>
<p style="padding-left: 90px;">主機板型號與規格, 支援 BIOS? 支援 UEFI? 什麼是 BIOS?  什麼是 UEFI?</p>
<p style="padding-left: 90px;">電源供應器型號與規格</p>
<p style="padding-left: 90px;">中央處理器型號與規格</p>
<p style="padding-left: 90px;">記憶體規格</p>
<p style="padding-left: 90px;">配有水銀電池嗎? 功能是什麼? 電池壽命大概多久?</p>
<p style="padding-left: 90px;">配有固態硬碟嗎? 什麼型號與規格?</p>
<p style="padding-left: 90px;">光碟機型號與規格</p>
<p style="padding-left: 90px;">配有 sata 硬碟嗎? 什麼型號與規格? 硬碟採 MBR 或 GPT 分割? 什麼叫做硬碟分割? 什麼是 MBR? GPT? 硬碟採那種規格格式化? FAT32? NTFS? exFAT?</p>
<p style="padding-left: 90px;">網路卡什麼品牌與規格?</p>
<p style="padding-left: 90px;">防寫卡什麼品牌與規格?</p>
<p style="padding-left: 90px;">操作系統版次?</p>
<p style="padding-left: 90px;">裝了那些軟體? 如何分類?</p>
<p style="padding-left: 90px;">這電腦能列印嗎? 需要列印嗎?</p>
<p style="padding-left: 90px;">這電腦能當伺服器嗎? 什麼是伺服器?</p>
<p style="padding-left: 90px;">這電腦能裝虛擬主機嗎? 什麼是虛擬主機?</p>
<p style="padding-left: 90px;">學校提供哪些教育版的軟體套件?</p>
<p style="padding-left: 90px;">系上提供哪些教育版的軟體套件?</p>
<p style="padding-left: 90px;">哪些公司提供免費的工程用教育版套件?</p>
<p style="padding-left: 90px;">關於這台電腦, 您還想知道什麼?</p>
<p style="padding-left: 60px;">對了, 你們上學期已經修過<span style="background-color: #ffff00;">計算機概論 (Introduction to Computers) </span>了, 而下學期將修<a href="https://mde.tw/2022fall/content/cp.html"><span style="background-color: #ffff00;">計算機程式</span></a><span style="background-color: #ffff00;"> (Computer Programming)</span>,  那麼</p>
<p style="padding-left: 60px;">從<span style="background-color: #ffff00;">計算機概論 -&gt; 網際內容管理 (Web-based Content Management) -&gt; <a href="https://mde.tw/2022fall/content/cp.html">計算機程式</a></span>, 這三門與電腦及網路有關的課程, 到底希望傳達什麼樣的知識?了解這些課程的內涵, 未來到底能用來做什麼?</p>
<p style="padding-left: 60px;">輸入(設定) -&gt; 電腦 + 網路 -&gt; 輸出(結果)</p>
<p style="padding-left: 60px;">電腦 ＋ 網路 可以接受那些輸入, 會產生那些輸出?</p>
<p style="padding-left: 60px;">台大電機系大一<a href="http://ocw.aca.ntu.edu.tw/ntu-ocw/ocw/cou/101S210">計算機概論</a>課程: Introduction to Computer</p>
<p style="padding-left: 90px;">"這是專門設計給電機系一年級同學修習的計算機概論課程，其目的在教授計算機科學的基礎技術及知識。同時亦著重C/C++相關程式設計的技巧。最終希望讓同學有足夠的能力修習進階計算機相關課程，以及利用計算機來解決日後的研究議題。課程內容包括</p>
<p style="padding-left: 90px;">1. 資料類：資料儲存、資料結構、資料庫<br/>2. 系統類：計算機結構，作業系統，網路<br/>3. 科學類：演算法，程式語言，人工智慧"</p>
<p style="padding-left: 90px;">Data Storage<br/>Data Manipulation<br/>Operating Systems<br/>Networking and Internet<br/>Algorithms<br/>Programming Languages<br/>Data Abstractions<br/>Database Systems<br/>Computer 3D Graphics<br/>Artificial Intelligence<br/>Theory of Computation</p>
<p style="padding-left: 60px;">清大資工<a href="https://ocw.nthu.edu.tw/ocw/index.php?page=course&amp;cid=13">計算機網路概論</a>課程</p>
<p style="padding-left: 90px;"><a href="https://www.amazon.com/Computer-Networking-Top-Down-Approach-7th/dp/0133594149">Computer Networking: A Top-Down Approach Featuring the Internet</a></p>
<p style="padding-left: 60px;">交大<a href="http://ocw.nctu.edu.tw/course_detail.php?bgid=0&amp;gid=0&amp;nid=192">計算機概論與程式設計</a>課程: Introduction to Computers and Programming</p>
<p style="padding-left: 90px;"><a href="https://www.amazon.com/Absolute-C-6th-Walter-Savitch/dp/0133970787">Absolute C++</a></p>
<p style="padding-left: 60px;">MIT <a href="https://ocw.mit.edu/courses/6-0001-introduction-to-computer-science-and-programming-in-python-fall-2016/download/">introduction to computer science and programming in Python</a> course</p>
<p style="padding-left: 90px;">Lecture 1: What is Computation?<br/>Lecture 1-0: Understanding Program Efficiency, Part 1<br/>Lecture 1-1: Understanding Program Efficiency, Part 2<br/>Lecture 1-2: Searching and Sorting<br/>Lecture 2: Branching and Iteration<br/>Lecture 3: String Manipulation, Guess and Check, Approximations, Bisection<br/>Lecture 4: Decomposition, Abstraction, and Functions<br/>Lecture 5: Tuples, Lists, Aliasing, Mutability, and Cloning<br/>Lecture 6: Recursion and Dictionaries<br/>Lecture 7: Testing, Debugging, Exceptions, and Assertions</p>
<p style="padding-left: 60px;">Stanford <a href="https://web.stanford.edu/class/cs101/lecture01.html#/">Introduction to Computers</a> course</p>
<p style="padding-left: 90px;"><a href="https://web.stanford.edu/class/cs101/">https://web.stanford.edu/class/cs101/</a> </p>
<p style="padding-left: 90px;">For high school: <a href="https://introcomputing.org/">https://introcomputing.org/</a> </p>
<p style="padding-left: 60px;">Kenya Anin Girls High <a href="https://peda.net/kenya/ass/subjects2/computer-studies/form-1/itc2">Introduction to Computers</a> course</p>
<p style="padding-left: 30px;">您對網路的了解有多少?</p>
<p style="padding-left: 30px;">學校的新生訓練提到多少與電腦及網路有關的資訊?</p>
<p style="padding-left: 30px;">您對系上的網路系統架構了解多少?</p>
<p style="padding-left: 30px;">我們該花一點時間了解一下當今最紅的 <a href="https://openai.com/blog/chatgpt/">https://openai.com/blog/chatgpt/</a> 嗎?</p>
<hr/>
<p style="padding-left: 30px;">電腦輔助設計室是如何上網的？</p>
<p style="padding-left: 30px;">您的手機使用門號上網與透過電腦輔助設計室 Wifi 上網, 會有哪些差別？</p>
<p style="padding-left: 30px;">電腦上的 Edge, Chrome 與 Firefox 瀏覽器在使用上有哪些差別?</p>
<p style="padding-left: 30px;">網際內容管理中的 Web-based 代表什麼？</p>
<p>請以自己的學號登入 <a href="https://mail.nfu.edu.tw">https://mail.nfu.edu.tw</a></p>
<p>請以自己的英文姓名至 <a href="https://github.com">https://github.com</a> 申請帳號</p>
<p>假如要選擇一項主題作為內容進行管理, 您會選擇什麼主題？</p>
<ol>
<li>利用近端管理個人網站 - 需要能開啟動態網站的 Python 程式環境</li>
<li>利用 Replit 管理個人網站 - 需要建立 Replit 帳號, 並使用 Token 授權維護 Github 倉儲</li>
<li>利用 Stud 伺服器管理個人網站 - 需要 Stud 主機帳號, 內部與外部 port, server.py 以及 acp</li>
<li>利用遠端管理個人網站 - 需要透過 Github Actions 協助集結動態網站內容與轉檔</li>
</ol>
<p>數位教材:</p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ET59eCPLupBGgIUmBog-yE0BMkL4RdYWNzpBxW-PzvnX1A?e=RKYWbq">1999 How to be a star engineer</a>, <a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EQtBbwaFSKdCrnxljlGU9NMBcl70NO4OghYo5caSpLcvcw?e=E9iyjL">如何成為一位傑出的工程師</a> (for @nfu users only)</p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EZzE7rKRQ3ZIvSoavwvZB6gBmupyVpzqRuvH7yO1i0Yj1w?e=h5SBg0">2023 Cloud Computing Technology</a> (for @nfu users only)</p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EZpULDm6GfNCsuTiqfloxnYBV1GzC1lG39SjU6ooqLWbyA?e=vuIlOV">2021 Cloud Computing Basics</a> (for @nfu users only)</p><h3>Computer</h3>
<p>Get harddisk model and serial number:</p>
<p style="padding-left: 30px;">wmic diskdrive get model, serialnumber</p>
<h3>ChatGPT</h3>
<p><a href="https://en.wikipedia.org/wiki/ChatGPT">https://en.wikipedia.org/wiki/ChatGPT</a></p>
<p>Chat Generative Pre-trained Transformer</p>
<ol>
<li>is a chatbot</li>
<li>launched by <a href="https://en.wikipedia.org/wiki/OpenAI">https://en.wikipedia.org/wiki/OpenAI</a></li>
<li>built on top of GPT-3 (Generative Pre-trained Transformer 3)</li>
<li>fine tuned by supervised and reinforcement learning techniques</li>
<li>models are trained in collaboration with Microsoft and Azure supercomputing infrastructure</li>
<li>CEO of the OpenAI is <a href="https://en.wikipedia.org/wiki/Sam_Altman">Sam Altman</a> who received his first computer at the age of 8</li>
</ol>
<p>Automate tasks using Python: <a href="https://medium.com/geekculture/hey-chatgpt-solve-these-coding-tasks-using-python-b2e7482f2c18">https://medium.com/geekculture/hey-chatgpt-solve-these-coding-tasks-using-python-b2e7482f2c18</a></p>
<p>Learn Python with ChatGPT: <a href="https://thedeveloperspace.com/learn-python-with-chatgpt/">https://thedeveloperspace.com/learn-python-with-chatgpt/</a></p>
<p>Running Python inside ChatGPT: <a href="https://mathspp.com/blog/running-python-inside-chatgpt">https://mathspp.com/blog/running-python-inside-chatgpt</a></p>
<p>Writing a chess program in one hour with ChatGPT: <a href="https://medium.datadriveninvestor.com/writing-a-chess-program-in-one-hour-with-chatgpt-67e7ec56ba5d">https://medium.datadriveninvestor.com/writing-a-chess-program-in-one-hour-with-chatgpt-67e7ec56ba5d</a></p><h3>5jtopics1</h3>
<p>主題:</p>
<p style="padding-left: 30px;">利用 Github 儲存資料</p>
<p>建立 Github 帳號:</p>
<p style="padding-left: 30px;">如何選擇帳號名稱?</p>
<p style="padding-left: 30px;">帳號與學號如何對應?</p>
<p style="padding-left: 30px;">透過 <a href="https://classroom.github.com">Github Classroom</a> 取得作業倉儲</p>
<p>目的:</p>
<p style="padding-left: 30px;">整理<a href="https://mde.tw/wcm2023/content/%E4%BA%94%E5%B0%88.html">五專頁面</a>中的所有相關資料</p>
<p>What you get:</p>
<p style="padding-left: 30px;">A repository</p>
<p style="padding-left: 30px;">A Web site (sort of)</p>
<p>討論:</p>
<p style="padding-left: 30px;">Why Github?</p>
<p style="padding-left: 30px;">Why assignment repository from <a href="https://classroom.github.com">Github Classroom</a>?</p>
<p style="padding-left: 60px;">先前開放的 <a href="https://github.com/education/classroom">Github Classroom 原始碼</a>, 03.13.2020 之後 Github Classroom 原始碼不再公開, 轉為內部程式開發專案.</p>
<p style="padding-left: 60px;"><a href="https://stackoverflow.com/questions/56577184/github-pull-changes-from-a-template-repository">https://stackoverflow.com/questions/56577184/github-pull-changes-from-a-template-repository</a></p>
<p>參考:</p>
<p style="padding-left: 30px;"><a href="https://youtu.be/PNEM7CH3ZAg">為什麼要學 Git?</a> <a href="https://www.sourcetreeapp.com/">https://www.sourcetreeapp.com/</a></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/Zd5jSDRjWfA">Learn Git and Github in 15 分鐘</a></p>
<p style="padding-left: 30px;"><a href="https://git-scm.com/book/zh-tw/v2">Pro Git 電子書繁體中文版</a></p>
<p style="padding-left: 30px;"><a href="https://backlog.com/git-tutorial/tw/">連猴子都能懂的 Git 入門指南</a></p>
<p></p><h2>四技</h2>
<p>w2 and w7 放假. w2 課程需在 w9 之前補課.</p>
<p>課程目標:</p>
<p style="padding-left: 30px;">Web-based program development - 網際應用程式開發</p>
<p>數位教材:</p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ET59eCPLupBGgIUmBog-yE0BMkL4RdYWNzpBxW-PzvnX1A?e=RKYWbq">1999 How to be a star engineer</a>, <a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EQtBbwaFSKdCrnxljlGU9NMBcl70NO4OghYo5caSpLcvcw?e=E9iyjL">如何成為一位傑出的工程師</a> (for @nfu users only)</p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EZzE7rKRQ3ZIvSoavwvZB6gBmupyVpzqRuvH7yO1i0Yj1w?e=h5SBg0">2023 Cloud Computing Technology</a> (for @nfu users only)</p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EZpULDm6GfNCsuTiqfloxnYBV1GzC1lG39SjU6ooqLWbyA?e=vuIlOV">2021 Cloud Computing Basics</a> (for @nfu users only)</p>
<p>三種選擇:</p>
<p>1. 用來研究 Streamlit? (快速建立 Web-based 應用程式, 著眼於 data science 與 Machine Learning)</p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EdBrqxY0LetMvE3_eDgXI2AB19x2ES8byteUrzz7uI3Kyg?e=eHvmx3">2023 Beginner’s Guide to Streamlit with Python</a> (for @nfu users only)</p>
<p style="padding-left: 60px;"><a href="https://streamlit.io">https://streamlit.io</a></p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EWOCmilOKM5GncPk82VFsFEBtEwDjvUvXry38NUVUSGiGQ?e=Xa4s3n">2023 Productionizing AI</a> (for @nfu users only)</p>
<p>2. 或者研究 Reeborg? (深入了解中型 Python 網際程式開發)</p>
<p style="padding-left: 30px;"><a href="https://mde.tw/wcm2023/content/Reeborg">https://mde.tw/wcm2023/content/Reeborg</a></p>
<p>3. 或者繼續 Old School Study, 從 cmsimde 研究起, 或修改 cmsimde, 令其更適合手機使用？ (深入了解小型 Python 網際程式開發)</p>
<p>4. 或者<span style="background-color: #ffff00;">一組三個人, 每人研究上述一項技術的內涵與應用</span>.</p>
<p>Web-based 應用程式都需要部署, 也就是需要一台電腦 (可稱為 server) 用來配置網際程式後端, 而使用者連結至 server 後, 會將 html + css + Javascript (Brython) 下載至客戶端 (Web Browser) 後執行.</p>
<p>而這一台電腦, 可以是 Windows based, Ubuntu based 或 MacOS based. 我們在上學期所使用的 Replit 與自行建構的 stud server, 就是用來配置網際伺服程式.</p>
<p>假如你有一台 Ram 達到 16GB 以上的電腦, 就能自行配置上述三種不同類型的應用程式.</p>
<p>假如你沒有足夠配備的電腦, 或許可以利用工作站室中的一台虛擬主機讓您學習如何配置網際伺服器與應用程式.</p>
<p>管理個人網站方法:</p>
<ol>
<li>利用近端管理個人網站 - 需要能開啟動態網站的 Python 程式環境</li>
<li>利用 Replit 管理個人網站 - 需要建立 Replit 帳號, 並使用 Token 授權維護 Github 倉儲</li>
<li>利用 Stud 伺服器管理個人網站 - 需要 Stud 主機帳號, 內部與外部 port, server.py 以及 acp</li>
<li>利用遠端管理個人網站 - 需要透過 Github Actions 協助集結動態網站內容與轉檔</li>
</ol><h3>topics1</h3>
<p>課程議題:</p>
<ol>
<li><a href="https://mde.tw/wcm2023/content/Brython.html">https://mde.tw/wcm2023/content/Brython.html</a> 是如何建立的? 有甚麼<a href="https://mde.tw/wcm2023/content/Brython%20demo.html">用處</a>? (兼學 <a href="https://docs.github.com/en/get-started/writing-on-github/editing-and-sharing-content-with-gists/creating-gists">Github Gist</a>?)</li>
<li>你應該已經知道在 Windows 操作系統中, 瀏覽器 (Browser, ref: <a href="https://www.google.com/search?q=what+browser+should+you+use">what browser should you use</a>, <a href="https://www.google.com/search?q=what+search+engines+should+you+use">what search engines should you use</a>) 是 <a href="https://www.google.com/search?q=world+wide+web">WWW</a> (World Wide Web 全球資訊網) 協定的客戶端 (Client), 那麼, 當使用者在瀏覽器的網址列 (URL address bar) 輸入網址, 就可以連結到該網址對應的網站, 那所謂的網站 (Web site) 是如何建立的?</li>
<li><a href="https://nginx.org/">https://nginx.org/</a> 是一套開源的程式 (<a href="https://github.com/nginx/nginx">原始碼</a>), 通常用來作甚麼? 可在 Windows 與 Ubuntu 操作系統中安裝嗎? 該如何設定?</li>
<li>Git 是甚麼? (<a href="https://ithelp.ithome.com.tw/articles/10138791">30 天精通 Git 版本控管</a>) Github 是甚麼? Github 為什麼最近發出<a href="https://techcrunch.com/2023/02/09/github-lays-off-10-and-goes-fully-remote/">通知</a>, 要所有的<a href="https://technews.tw/2023/02/13/github-lays-off-10-of-its-workforce-and-all-work-remotely/">員工全部採 Work from home 上班</a>? 有沒有可能哪一天 Github 就像 Google 終止教育版 unlimited storage 的政策, 不再提供免費帳戶選項? <span style="text-decoration: line-through;">爛學校裡的</span>窮學生除了尋找<a href="https://www.google.com/search?q=github+alternatives">替代方案</a>外, 或許這時 <a href="https://www.fossil-scm.org">FossilSCM</a> 就可派上用場.</li>
<li>Git 明明非常補, 為什麼大多數人都吞不下去? 良藥苦口嗎? 假如有天你被要求 <a href="https://en.wikipedia.org/wiki/Remote_work">WFH</a>?</li>
<li>你能想像曾經沒有手機與<a href="https://brilliantio.com/what-was-life-like-before-the-internet/">沒有全球資訊網網站之前的生活型態</a>嗎? 或者是沒有線上遊戲與動漫的年代?</li>
<li>一代不如一代, 是真的嗎? 為什麼台灣不時興高中或大學輟學出去創業? 因為 <a href="https://www.google.com/search?client=firefox-b-d&amp;q=%E7%82%BA%E4%BB%80%E9%BA%BC%E5%8F%B0%E7%81%A3%E4%B8%8D%E6%99%82%E8%88%88%E9%AB%98%E4%B8%AD%E6%88%96%E5%A4%A7%E5%AD%B8%E8%BC%9F%E5%AD%B8%E5%87%BA%E5%8E%BB%E5%89%B5%E6%A5%AD%3F">Google 繁體中文搜尋</a>只得不到 10 個結果?</li>
<li>有了 <a href="https://www.zdnet.com/article/how-to-use-chatgpt/">ChatGPT</a>, 一堆人將會沒有工作, 真是這樣嗎? 能不能打不過就加入? 聽過<a href="https://xunzi-5000yan-com.translate.goog/xiushen/?_x_tr_sl=zh-CN&amp;_x_tr_tl=zh-TW">役物而不役於物</a>嗎?</li>
<li>有一些<a href="https://sdgs.udn.com/sdgs/story/12379/3269475?from=udn_ch1010_menu_main_cate">餐廳開始用機器煮菜</a>, 那是不是廚師很快就會被淘汰? 還有人記得曾有所謂<a href="https://udn.com/umedia/story/12910/6866095">珠心算老師</a>嗎?</li>
<li>數位化, 虛擬化, 類比實體世界, 運算能力, 邏輯解析能力, 資料庫結構, 演算法, 海底電纜, 無線傳輸是靠"看不見"的"線"傳輸, 這個線是有還是無? 電力是數位還是類比?</li>
<li>曾經從台北到虎尾需要耗費好幾個小時, 現在搭高鐵只需要 1 小時 15 分, 假如<span style="text-decoration: line-through;">哆啦A夢</span>人能搭網路線則需要不到 1 秒, <a href="https://www.google.com/search?client=firefox-b-d&amp;q=%E6%88%91%E5%80%91%E6%98%AF%E4%B8%8D%E6%98%AF%E6%87%89%E8%A9%B2%E6%80%9D%E8%80%83%E9%82%A3%E4%BA%9B%E5%B7%A5%E4%BD%9C%E4%BA%BA%E9%9C%80%E8%A6%81%E5%AF%A6%E9%AB%94%E7%A7%BB%E5%8B%95%2C+%E8%80%8C%E9%82%A3%E4%BA%9B%E5%B7%A5%E4%BD%9C%E5%89%87%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E5%9C%A8%E7%B7%9A%E4%B8%8A%E5%AE%8C%E6%88%90%E5%B0%B1%E5%A5%BD">我們是不是應該思考那些工作人需要實體移動, 而那些工作則可以直接在線上完成就好</a>?</li>
<li>有人知道中華電信所提供的所謂光世代連線, 在某些時段, 用戶的網路連線協定只有 IPv4 嗎? 這會對使用者造成哪些影響?</li>
</ol>
<p><img alt="" class="add_border" height="220" src="/images/Pyside2_right_now_no_for_Python3.11.png" width="600"/></p>
<hr/>
<p>如何建立網站? 如何維護?</p>
<p style="padding-left: 30px;">建立網站:</p>
<p style="padding-left: 60px;">利用 Github Pages</p>
<p style="padding-left: 60px;">自行維護 server</p>
<p style="padding-left: 30px;">內容維護:</p>
<p style="padding-left: 60px;">在線上維護</p>
<p style="padding-left: 60px;">在個人的電腦上維護</p>
<p>為何需要建立網站? 為何內容維護需要紀錄版本?</p>
<p style="padding-left: 30px;">範例: <a href="https://github.com/KmolYuan">https://github.com/KmolYuan</a></p>
<p>計算機程式 -&gt; (網際內容管理) -&gt; 電腦輔助設計與實習 -&gt; 協同產品設計實習</p>
<p>請設想一個情境, 能夠從 Web-based Content Management 過程中獲益.</p>
<p style="padding-left: 30px;">舉例: 上列的四門課程, 從設計到完成評分, 幾乎完全利用線上資源建立內容.</p>
<hr/>
<p>Create a virtual server: <a href="https://www.virtualbox.org/wiki/Downloads">https://www.virtualbox.org/wiki/Downloads</a></p>
<p>下載 <a href="https://software.nfu.edu.tw/Windows/tw/Win10_21H2.9_64BIT_CH.ISO">Win10_21H2.9_64BIT_CH.ISO</a> (5.5GB for @nfu users only) (<a href="https://software.nfu.edu.tw/KMS/windows_kms.bat">KMS</a>)</p>
<p>下載 Ubuntu server: <a href="https://ubuntu.com/download/server">https://ubuntu.com/download/server</a></p>
<p><a href="https://github.com/">Github</a> and <a href="https://replit.com/">Replit</a></p><h3>Brython demo</h3>
<p>利用 Google 搜尋 <a href="https://www.google.com/search?q=pure+python+solve+differential+equations">Pure Python solve differential equations</a></p>
<p style="padding-left: 30px;">了解<a href="https://integratedmlai.com/system-of-equations-solution/">如何以純 Python 解聯立方程式</a>後, 將程式碼<a href="https://gist.github.com/mdecycu/940b020e24168c541fd3cf69b9a5619e#file-solve_system_of_eqn-py">存入 Gist</a> 後: <a href="https://mde.tw/wcm2023/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/940b020e24168c541fd3cf69b9a5619e/raw/cf4367ec2ea6b22c013a14d7d7a42aa89ef336f6/solve_system_of_eqn.py">Solved with Brython</a></p><h2>History</h2>
<p>當我們利用 template 建立個人的作業網站之後, 假如原始的 template 倉儲改版, 而學員的作業倉儲也改版, 學員的倉儲應該要如何納入原始 template 倉儲中的改版資料? 即便在上學期末, 各分組學員已經用過 fork 與 pull requests, 但是針對上述所提出來的資料合併議題, 其實並不簡單. 有興趣處理這項問題, 大家可以<a href="https://stackoverflow.com/questions/56577184/github-pull-changes-from-a-template-repository">參考一下網友們如何處理這個 template 改版與合併的問題</a>.</p>
<p>利用 <a href="https://forms.microsoft.com/">Microsoft Forms</a> 建立各組互評表單</p>
<p><a href="https://zen1976.com/homework/">https://zen1976.com/homework/</a> </p>
<p><a href="https://obsproject.com/">OBS</a> and <a href="https://www.youtube.com/@-kmolab9376/videos">Youtube 教學影片</a> (學習如何使用 OBS 並利用 Arduino 與 Python 開發周邊套件）</p>
<p style="padding-left: 30px;"><a href="https://github.com/micahmo/obs-tally-python">https://github.com/micahmo/obs-tally-python</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/dmadison/OBS-Mute-Indicator">https://github.com/dmadison/OBS-Mute-Indicator</a> </p>
<p style="padding-left: 30px;"><a href="https://obsproject.com/docs/scripting.html">https://obsproject.com/docs/scripting.html</a> </p>
<p>Python script using proxy to execute:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import os

proxy = 'http://[2001:288:6004:17::xx]:3128'

os.environ['http_proxy'] = proxy
os.environ['HTTP_PROXY'] = proxy
os.environ['https_proxy'] = proxy
os.environ['HTTPS_PROXY'] = proxy</pre>
<p></p><h1>Website</h1>
<p>Website 指的是全球資訊網協定下的網站, 而全球資訊網協定是依附在 TCP/IP 與 HTTP 網路協定下的客戶端 (瀏覽器) 與伺服器端.</p>
<p>若利用 <a href="https://pages.github.com/">Github Pages</a> 建立個人網站, 則伺服器端就是 github.io 網址中的伺服器,</p>
<p>Github Pages Docs: <a href="https://docs.github.com/en/enterprise-server@3.5/admin/overview/about-github-enterprise-server">https://docs.github.com/en/enterprise-server@3.5/admin/overview/about-github-enterprise-server</a> </p>
<p>Github 帳號功能比較: <a href="https://github.com/pricing#feature-comparison">https://github.com/pricing#feature-comparison</a></p>
<p><a href="https://pages.github.com/">Github Pages</a>:</p>
<ol>
<li>由 Github 所提供的靜態網頁全球資訊網伺服器 (Static site hosting server)</li>
<li>可伺服 Github 倉儲中的超文件, 包括 html, css 與 Javascript 資料</li>
<li>帳號.github.io 是最短的網站名稱, 但要求倉儲必須命名為: 帳號.github.io</li>
<li>將資料轉為網站時, 必須檢查倉儲內容是否具備轉為網站的<a href="https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages">條件</a></li>
<li>網站總容量必須小於 1GB (因此倉儲中儘量不要存放大檔案, 建議將檔案放入 Onedrive 後在網站中提供連結)</li>
<li>網站連結總頻寬必須小於 100GB/月 (因此網站中不要放入無謂的 html 連結或設定, 意即不要直接從其他網站 copy/paste 資料, 而應提供原始文字檔後, 進入編輯器設定必要的設定與連結)</li>
<li>網站轉檔次數限制在<span style="background-color: #ffff00;">每一小時 10 次</span> (意即每一小時的推送 (push) 次數不要超過 10 次)</li>
<li>使用者必須遵守 <a href="https://docs.github.com/en/site-policy/github-terms/github-terms-of-service">Github Terms of Service</a></li>
</ol><h1>Reeborg</h1>
<p><a href="https://github.com/aroberge/reeborg">https://github.com/aroberge/reeborg</a></p>
<p><a href="https://mde.tw/wcm2023/reeborg2016/">https://mde.tw/wcm2023/reeborg2016/</a></p>
<ol>
<li>Reeborg 是如何建立的?</li>
<li>初學程式者如何透過 Reeborg 學習 Python (Brython and CPython) 與 Javascript</li>
</ol><h1>cmsimde</h1>
<p><a href="https://github.com/mdecycu/cmsimde">https://github.com/mdecycu/cmsimde</a></p>
<p>本課程第三部分在說明 <a href="https://github.com/mdecycu/cmsite">https://github.com/mdecycu/cmsite</a> 與 <a href="https://github.com/mdecycu/cmsimde_site">https://github.com/mdecycu/cmsimde_site</a> 如何搭建, 程式架構與應用的發展如何從個人電腦導向手機.</p>
<ol>
<li>由於手機相機的解析度極高, 因此若能在上傳手機相片前或之後將影像檔案縮減至網站可視之檔案大小, 將可省下頻寬與倉儲儲存的負擔. (<a href="https://medium.com/hootsuite-engineering/mobile-photo-uploads-with-html5-f7ea174ef128">參考資料</a>)</li>
<li>設法利用 Brython 或 Python 建立將 URL 轉為 QR Code, 以便讓手機可以直接透過手機拍攝後直接進入內容管理系統網站. (<a href="https://segno.readthedocs.io/en/stable/comparison-qrcode-libs.html">參考資料</a>)</li>
</ol>
<h2>Resize image</h2>
<p><a href="https://gist.github.com/lzhbrian/560258a5bbb3ab4ee2c451b7d3801dfd">source</a>, <a href="https://github.com/joelvardy/javascript-image-upload">reference</a>, <a href="https://github.com/pqina/filepond">reference</a></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;img src="" id="image"&gt;
&lt;input id="input" type="file" onchange="handleFiles()"&gt;

&lt;script&gt;
    function handleFiles()
    {
        var dataurl = null;
        var filesToUpload = document.getElementById('input').files;
        var file = filesToUpload[0];

        // Create an image
        var img = document.createElement("img");
        // Create a file reader
        var reader = new FileReader();
        // Set the image once loaded into file reader
        reader.onload = function(e)
        {
            img.src = e.target.result;

            img.onload = function () {
                var canvas = document.createElement("canvas");
                var ctx = canvas.getContext("2d");
                ctx.drawImage(img, 0, 0);

                var MAX_WIDTH = 300;
                var MAX_HEIGHT = 400;
                var width = img.width;
                var height = img.height;

                if (width &gt; height) {
                  if (width &gt; MAX_WIDTH) {
                    height *= MAX_WIDTH / width;
                    width = MAX_WIDTH;
                  }
                } else {
                  if (height &gt; MAX_HEIGHT) {
                    width *= MAX_HEIGHT / height;
                    height = MAX_HEIGHT;
                  }
                }
                canvas.width = width;
                canvas.height = height;
                var ctx = canvas.getContext("2d");
                ctx.drawImage(img, 0, 0, width, height);

                dataurl = canvas.toDataURL("image/jpeg");

                document.getElementById('image').src = dataurl;

                // Post the data
                var fd = new FormData();
                fd.append("name", "some_filename.jpg");
                fd.append("image", dataurl);
                fd.append("info", "lah_de_dah");
                $.ajax({
                    url: '/ajax_photo',
                    data: fd,
                    cache: false,
                    contentType: false,
                    processData: false,
                    type: 'POST',
                    success: function(data){
                        $('#form_photo')[0].reset();
                        location.reload();
                    }
                });
            } // img.onload
        }
        // Load files into file reader
        reader.readAsDataURL(file);
    }
&lt;/script&gt;</pre>
<p></p><h1>Python</h1>
<p>利用以下流程所建立的 Python 3.11.2 可攜套件: <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EbT9h2uxP41DhXp6TkYQKNABgtLPvnMq5y781nH5TzeuNQ?e=zW9Hkf">Python311_portable.7z</a> (for @nfu users only)</p>
<h4>何謂可攜式 Python 程式環境?</h4>
<h4 style="padding-left: 30px;">Python 程式是如何執行的?</h4>
<p style="padding-left: 30px;">首先 Python 是一種解譯式 (Interpreted) 程式語言, 與 C 或 C++ 程式語言最大的差別是, C/C++ 程式碼通常必須透過編譯 (Compile) 與連結 (Link) 的過程, 將原始碼轉為可執行的格式 (在 Windows 操作系統為 .exe 檔案), 而 Python 程式寫好後, 可以直接利用解譯器執行, 使用者不需要手動執行程式碼的編譯, 而是由解譯器在執行前即時將程式碼轉換為可執行檔案.</p>
<p style="padding-left: 30px;">在 <a href="https://www.geeksforgeeks.org/internal-working-of-python/">geeksforgeeks 網站</a>, 以下列敘述說明 Python 程式如何執行:</p>
<p style="padding-left: 30px;">Python is an object-oriented programming language like Java. Python is called an interpreted language. Python uses code modules that are interchangeable instead of a single long list of instructions that was standard for functional programming languages. The standard implementation of python is called "cpython". It is the default and widely used implementation of Python.</p>
<p style="padding-left: 30px;">Python doesn’t convert its code into machine code, something that hardware can understand. It actually converts it into something called byte code. So within python, compilation happens, but it’s just not into a machine language. It is into byte code (.pyc or .pyo) and this byte code can’t be understood by the CPU. So we need an interpreter called the python virtual machine to execute the byte codes</p>
<p style="padding-left: 30px;">針對 Python 程式的"編譯"過程, 則<a href="https://www.geeksforgeeks.org/understanding-the-execution-of-python-program/">說明如下</a>:</p>
<p style="padding-left: 30px;">The Python program is converted into byte code. Byte code is a fixed set of instructions that represent arithmetic, comparison, memory operations, etc. It can run on any operating system and hardware. The byte code instructions are created in the .pyc file. The .pyc file is not explicitly created as Python handles it internally but it can be viewed with the following command:</p>
<p style="padding-left: 60px;">Y:\tmp\python_ex&gt;python -m py_compile hello.py</p>
<p style="padding-left: 30px;">-m and py_compile represent module and module name respectively. This module is responsible to generate .pyc file. The compiler creates a directory named  __pycache__ where it stores the hello.cpython-39.pyc file (若採用 Python 3.9 版次的編譯器).</p>
<p style="padding-left: 30px;">至於針對 Python 程式的"解譯"執行過程, 則<a href="https://www.geeksforgeeks.org/understanding-the-execution-of-python-program/">說明如下</a>:</p>
<p style="padding-left: 30px;">The next step involves converting the byte code (.pyc file) into machine code. This step is necessary as the computer can understand only machine code (binary code). Python Virtual Machine (PVM) first understands the operating system and processor in the computer and then converts it into machine code. Further, these machine code instructions are executed by processor and the results are displayed.</p>
<p style="padding-left: 30px;">However, the interpreter inside the PVM translates the program line by line thereby consuming a lot of time. To overcome this, a compiler known as Just In Time (JIT) is added to PVM. JIT compiler improves the execution speed of the Python program. This compiler is not used in all Python environments like CPython which is standard Python software.</p>
<p style="padding-left: 30px;">To execute the hello.cpython-39.pyc we can use the following command:</p>
<p style="padding-left: 60px;">Y:\tmp\python_ex&gt;python __pycache__\hello.cpython-39.pyc</p>
<p style="padding-left: 30px;">至於有關 python.exe 與 pythonw.exe 的差別, 則參見<a href="https://stackoverflow.com/questions/9705982/pythonw-exe-or-python-exe">這裡的說明</a>. 至於 SciTE 設定 python.properties 中, 使用 pythonw.exe -u 表示除了採非同步 (asynchronous) 執行模式外, 同時 force the stdout and stderr streams to be unbuffered; but has no effect on stdin.</p>
<h4 style="padding-left: 30px;">Python 解譯器的類別:</h4>
<p style="padding-left: 30px;">最早的 Python 解譯器以 C 程式語言編寫, 稱為 <a href="https://en.wikipedia.org/wiki/CPython">CPython</a>, 以 Python 編寫的 Python 解譯器稱為 <a href="https://en.wikipedia.org/wiki/PyPy">Pypy</a>, 以 .NET 技術編寫的 Python 解譯器稱為 <a href="https://en.wikipedia.org/wiki/IronPython">Ironpython</a>, 以 Java 編寫的 Python 解譯器稱為 <a href="https://en.wikipedia.org/wiki/Jython">Jython</a>, 以 Javascript 編寫的 Python 解譯器稱為 <a href="https://brython.info/">Brython</a>. 以 Rust 編寫的 Python 解譯器稱為 <a href="https://github.com/RustPython/RustPython">RustPython</a>.</p>
<h4 style="padding-left: 30px;">建立可攜 Python 程式環境的目的:</h4>
<p style="padding-left: 30px;">一般在 Windows 10 中使用 <a href="https://en.wikipedia.org/wiki/CPython">CPython</a> 都是透過操作系統安裝, 將 <a href="https://en.wikipedia.org/wiki/CPython">CPython</a> 解譯器登錄在操作系統的 <a href="https://en.wikipedia.org/wiki/Windows_Registry">Registry</a> 中. 只不過配置在操作系統的 <a href="https://en.wikipedia.org/wiki/CPython">CPython</a> 解譯器若在使用過程中, 透過 <a href="https://pypi.org/project/pip/">pip</a> 安裝額外的模組後, 當電腦輔助設計室中的電腦重新開機後, 操作系統將會因為安裝防寫套件而恢復原先所安裝無額外模組的狀態.</p>
<p style="padding-left: 30px;">網際內容管理與協同產品設計實習課程為了<span style="background-color: #ffff99;">讓使用者可以隨身帶著 <a href="https://en.wikipedia.org/wiki/CPython" style="background-color: #ffff99;">CPython</a> 解譯器</span>, 因此繞過 Windows 10 操作系統的 Registry 登錄, 設法以批次檔案在虛擬的硬碟 (y:) 啟動 <a href="https://en.wikipedia.org/wiki/CPython">CPython</a> 解譯環境.</p>
<p style="padding-left: 30px;">此外, 配置在 USB 隨身碟的可攜 <a href="https://en.wikipedia.org/wiki/CPython">CPython</a> 程式環境, 除了可執行一般 Python 程式外, 也可自行安裝所需模組, 並用於 <a href="https://github.com/mdecourse/cmsimde">cmsimde</a> 動態與靜態網站編輯.</p>
<p style="padding-left: 30px;">可攜程式環境中除 <a href="https://en.wikipedia.org/wiki/CPython">CPython</a>, 還可配置 <a href="https://www.msys2.org/">MSYS2</a> C/C++ 編譯系統. 針對 <a href="https://www.scintilla.org/SciTE.html">SciTE</a>, <a href="https://github.com/solvespace/solvespace">Solvespace</a>, <a href="https://github.com/Range-Software/range3">Range3</a>, <a href="https://github.com/CoppeliaRobotics">CoppeliaSim</a> 等開源套件執行編譯.</p>
<h4>如何建立可攜 Python 程式環境?</h4>
<p style="padding-left: 30px;">能放入 USB 隨身碟執行的 Python 程式環境包含兩個部分:</p>
<p style="padding-left: 60px;">(1) Python 解譯器系統檔案</p>
<p style="padding-left: 60px;">(2) 可攜啟動設定批次檔 (例如: <a href="http://wcm.cycu.org:88/github/wcm2022_guide/downloads/start_ipv6.bat">start_ipv6.bat</a>)</p>
<p style="padding-left: 30px;">要在 Windows 操作系統中, 取得各版本的 Python 解譯器系統檔案, 也有兩種方法:</p>
<p style="padding-left: 60px;">(1) 從官方網站下載安裝檔 (例如: <a href="https://www.python.org/ftp/python/3.10.2/">3.10.2 版</a>的 <a href="https://www.python.org/ftp/python/3.10.2/python-3.10.2-amd64.exe">python-3.10.2-amd64.exe)</a>, 手動安裝 Python, 取下安裝內容後, 解除安裝程式.</p>
<p style="padding-left: 60px;">(2) 利用 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/Eatd1g4iPyFFoZFlwR66DisBHx-fNimjugQ2svoXQJAWSQ?e=qrEmuR">gen_portable_python.py</a>, 從 Python 官方網站下載基本的 .msi 檔案 (例如 <a href="https://www.python.org/ftp/python/3.10.2/amd64/">3.10.2 版</a>中的 core.msi, dev.msi, exe.msi, lib.msi, tcltk.msi 與 tools.msi), 然後利用 <a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/msiexec">msiexec.exe</a> 配合 <a href="https://docs.microsoft.com/zh-tw/windows/win32/msi/targetdir">targetdir</a> 屬性解開各安裝檔.</p>
<p id="pp310">以下將要結合 <a href="https://www.scintilla.org/SciTE.html">SciTE</a>, <a href="https://github.com/TinyCC/tinycc">Tiny C Compiler</a> 與 <a href="https://www.python.org/ftp/python/3.10.2/">Python 3.10.2</a>, 建立一個可攜版的 CPython 與 <a href="https://en.wikipedia.org/wiki/ANSI_C">ANSI C</a> 執行環境.</p>
<ol>
<li>從 <a href="http://download.savannah.gnu.org/releases/tinycc/">http://download.savannah.gnu.org/releases/tinycc/</a> 下載 <a href="http://download.savannah.gnu.org/releases/tinycc/tcc-0.9.27-win64-bin.zip">tcc-0.9.27-win64-bin.zip</a>.</li>
<li>從 <a href="https://www.scintilla.org/SciTEDownload.html">https://www.scintilla.org/SciTEDownload.html</a> 下載 <a href="https://www.scintilla.org/wscite521.zip">wscite521.zip</a>.</li>
<li>利用 Python 3.9.5 (或先前的 Python3 舊版可攜程式) 執行 <a href="http://wcm.cycu.org:88/github/wcm2022_guide/downloads/gen_portable_python.py">gen_portable_python.py</a> 取得 Python310 解譯器系統檔案.</li>
<li>根據上述流程建立的基本 Python 與 ANSI C 可攜程式系統 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ETQ0bIB9Vs1CloTwDiqnMO0BV_SCXVQUmfPd3sANXqF1ZA?e=bpP7C0">Portable_py310_tcc.7z</a> (for @nfu users only, 此一 Python 解譯器只帶有基本模組且尚未安裝 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EUaDMWggjIZAiFSVjo-otN8BuZe0GpaAio4J_NRzz39tRA?e=9FhCRC">get-pip.py</a>)</li>
<li>此一 Python 解譯器以 python <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EUaDMWggjIZAiFSVjo-otN8BuZe0GpaAio4J_NRzz39tRA?e=9FhCRC">get-pip.py</a> 安裝 pip 後, 再以 pip install flask flask_cors bs4 lxml pelican markdown leo pyopenssl 安裝 <a href="https://mde.tw/cmstemplate/content/CMSiMDE.html">cmsimde 所需模組</a>後, 即可用於 wcm2022 動態與靜態系統的編輯.</li>
<li>此一 Python 解譯器再結合 <a href="https://git-scm.com/download/win">Portablegit</a> 與 <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">PUTTY</a>, 就可以支援以 <a href="https://mde.tw/wcm2022_guide/content/Token%20and%20SSH.html">SSH</a> 執行 github 倉儲的 git push.</li>
</ol>
<h4>如何建立網際 Python 程式環境 (Brython)?</h4>
<p style="padding-left: 30px;">例如: <a href="https://mde.tw/wcm2022_guide/content/run.html">run</a> 頁面.</p>
<p>從 <a href="https://drive.google.com/file/d/1TMPsHz6G01-pxkvXf9NFM8nFdtCHQv8D/view?usp=sharing">portable_python_wcm2022.7z</a> 下載的可攜程式環境有哪些功能?</p>
<p><span style="background-color: #ffff99;">請注意: 以下的 .7z 檔案下載, 只允許在系上網段上下載</span>.</p>
<ol>
<li><a href="http://wcm.cycu.org:88/compile_copsim_cd2022.7z">compile_copsim_cd2022.7z</a> (file size: 5 GB, extracted size: 17.3 GB, 包含除了 NX1980 之外的所有課程相關可攜程式套件, 是專門為 <a href="https://mde.tw/cd2022">cd2022</a> 課程學員打造的套件).</li>
<li><a href="http://wcm.cycu.org:88/portable_python_wcm2022.7z">portable_python_wcm2022.7z</a> (file size: 513 MB, extracted size: 2.3 G, 這是專門為 <a href="https://mde.tw/wcm2022">wcm2022</a> 課程打造的可攜程式套件, 適合選修學員下載後在任何 Windows 10 中以隨身碟啟動後操作)</li>
<li><a href="http://wcm.cycu.org:88/drive.7z">drive.7z</a> (file size: 2.6 MB, extracted size: 10 MB, 只包含 PUTTY, tcc, wscite 與 tmp 目錄, 採用 Hybrid 方式設定, 可與目前電腦輔助設計室中 SSD 硬碟所安裝的 Python 3.9.5 與 <a href="https://git-scm.com/download/win">Portablegit</a> 結合, 使用者只需自行設定啟動後的 home_ipv6 目錄與 home_ipv6/Desktop 目錄後即可以最輕薄便捷的方式將 SSH key 存入隨身碟, 並將個人與分組倉儲存入隨身碟啟動後的 tmp 目錄進行操作).</li>
</ol>
<p>以下利用 Wink3 影片說明以 Hybrid 方式啟動的 USB 隨身碟如何建立? 以及使用上與完整 USB 隨身碟可攜程式系統的差別:</p>
<p>Hybrid 可攜程式系統是只將必要檔案配置到 USB 隨身碟, 其餘檔案則使用已經存在電腦上的內容, 主要包含 Python 3.9.5 解譯程式 (863 MB) 與 Portblegit 2.31.1 (285 MB).</p>
<p>Hybrid 可攜程式系統優點:</p>
<ol>
<li>初始 USB 隨身碟只需複製 10.5 MB 的資料 (只自帶 PUTTY (4.3 MB), tcc (1.7 MB), tmp 與 wscite (4.3 MB)).</li>
<li>使用電腦 SSD 上所安裝的 Python 與 Portablegit, 執行速度會比一般 USB 隨身碟快.</li>
</ol>
<p>Hybrid 可攜程式系統缺點:</p>
<ol>
<li>在未修改 Python Script 目錄中的 .exe 可執行檔之前, 必須透過 .py 執行, 例如: 命令列 中輸入 leo 並無法執行執行, 必須採用 import leo.core.runLeo;leo.core.runLeo.run()</li>
<li>若在裝有還原卡的電腦, 未修改 Python 系統模組路徑之前, 所安裝的額外模組無法放入 USB 隨身碟中.</li>
</ol>
<h2>Brython</h2>
<p><a href="https://mde.tw/2022fall/">https://mde.tw/2022fall/</a></p>
<p>cmsite: wcms use <a href="https://github.com/mdecycu/cmsimde">https://github.com/mdecycu/cmsimde</a> as submodule</p>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation</h4>
<h4>Variables</h4>
<h4>Comments</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a></h4>
<h4>print</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/><h2>Javascript</h2>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ERsqniMYh-dEqUL86Yk0xFABtUAVLcazG4hRsOcOnx7ESA?e=7zZUdH">2023 Programming for Absolute Beginners Using the JavaScript Programming Language</a> (for @nfu users only)</p>
<script>
window.alert("This is an example of a computer program.")
</script>